ws      <- space+
keyword <- cap{
    words{
        "break", "case", "chan", "const", "continue", "default", "defer", "else", "fallthrough", "for", "func", "go", "goto",
        "if", "import", "interface", "map", "package", "range", "return", "select", "struct", "switch", "type", "var"
    },
    "keyword"
}
constant <- cap{
    words{"true", "false", "iota", "nil"},
    "constant.bool"
}
type <- cap{
    words{
        "bool", "byte", "complex64", "complex128", "error", "float32", "float64", "int", "int8", "int16", "int32",
        "int64", "rune", "string", "uint", "uint8", "uint16", "uint32", "uint64", "uintptr"
    },
    "type"
}

function <- cap{
    words{
        "append", "cap", "close", "complex", "copy", "delete", "imag", "len", "make", "new", "panic", "print", "println",
        "real", "recover"
    },
    "function"
}

identifier    <- cap{word, "identifier"}

sq_str        <- "'" (escape / (!"'" .))* "'"?
dq_str        <- '"' (escape / (!'"' .))* '"'?
raw_str       <- "`" (!"`" .)* "`"?
escape        <- cap{'\\' ['"tnbfr\\], "constant.string.escape"}
string        <- cap{sq_str / dq_str / raw_str, "constant.string"}

line_comment  <- '//' (!'\n' .)*
block_comment <- '/*' (!'*/' .)* '*/'?
comment       <- cap{line_comment / block_comment, "comment"}

number        <- cap{float / integer 'i'?, "constant.number"}
operator      <- cap{[+\-*/%&|^<>=!:;.,()\[\]{}], "symbol.operator"}

token <- ws
       / keyword
       / constant
       / type
       / function
       / identifier
       / string
       / comment
       / number
       / operator
