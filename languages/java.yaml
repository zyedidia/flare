filetype: java
rules:
    whitespace:
        pattern: "space+"
        capture: "whitespace"
    line_comment:
        pattern: "'//' (!'\n' .)*"
    block_comment:
        pattern: "'/*' (!'*/' .)* '*/'?"
    comment:
        pattern: "line_comment / block_comment"
        capture: "comment"
    sq_str:
        pattern: >-
            "'" (escape / (!"'" .))* "'"?
    dq_str:
        pattern: >-
            '"' (escape / (!'"' .))* '"'?
    escape:
        pattern: "'\\\\' ['\"tnbfr\\\\]"
        capture: "special"
    string: 
        pattern: "sq_str / dq_str"
        capture: "string"
    number:
        pattern: "(float / integer) [LlFfDd]?"
        capture: "number"
    keyword:
        words: ["abstract", "assert", "break", "case", "catch", "class", "const",
                "continue", "default", "do", "else", "enum", "extends", "final", "for",
                "goto", "if", "implements", "import", "instanceof", "interface",
                "native", "new", "package", "private", "protected", "public", "return",
                "static", "strictfp", "super", "switch", "synchronized", "this",
                "throw", "throws", "transient", "try", "while", "volatile", "true",
                "false", "null"]
        capture: "keyword"
    type:
        words: ["boolean", "byte", "char", "double", "float", "int", "long", "short",
                "void", "Boolean", "Byte", "Character", "Double", "Float", "Integer",
                "Long", "Short", "String"]
        capture: "type"
    identifier:
        pattern: "word"
        capture: "identifier"
    operator:
        pattern: "[+\\-/*%<>!=^&|?~:;.()\\[\\]{}]"
        capture: "operator"
    annotation:
        pattern: "'@' word"
        capture: "annotation"
    func_name:
        pattern: "word"
        capture: "function"
    func:
        pattern: "func_name '('"
    class_name:
        pattern: "word"
        capture: "class"
    class_keyword:
        pattern: "'class'"
        capture: "keyword"
    class_sequence:
        pattern: "class_keyword space+ class_name"
tokens: [
    "whitespace",
    "class_sequence",
	"keyword",
	"type",
	"func",
	"identifier",
	"string",
	"comment",
	"number",
	"annotation",
	"operator",
]
