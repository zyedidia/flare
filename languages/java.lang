ws <- space+

line_comment  <- '//' (!'\n' .)*
block_comment <- '/*' (!'*/' .)* '*/'?
comment       <- cap{line_comment / block_comment, "comment"}

sq_str        <- "'" (escape / (!['\n] .))* "'"?
dq_str        <- '"' (escape / (!["\n] .))* '"'?
escape        <- cap{'\\' ['"tnbfr\\], "constant.string.escape"}
string        <- cap{sq_str / dq_str, "constant.string"}

number        <- cap{(float / integer) [LlFfDd]?, "constant.number"}

keyword <- cap{
    words{
        "abstract", "assert", "break", "case", "catch", "class", "const",
        "continue", "default", "do", "else", "enum", "extends", "final", "for",
        "goto", "if", "implements", "import", "instanceof", "interface",
        "native", "new", "package", "private", "protected", "public", "return",
        "static", "strictfp", "super", "switch", "synchronized", "this",
        "throw", "throws", "transient", "try", "while", "volatile"
    },
    "keyword"
}

bool <- cap{
    words{
        "true", "false", "null"
    },
    "constant.bool"
}

type <- cap{
    words{
        "boolean", "byte", "char", "double", "float", "int", "long", "short",
        "void", "Boolean", "Byte", "Character", "Double", "Float", "Integer",
        "Long", "Short", "String"
    },
    "type"
}

identifier <- cap{word, "identifier"}
operator   <- cap{[+\-/*%<>!=^&|?~:;.()\[\]{}], "symbol.operator"}
annotation <- cap{'@' word, "type.annotation"}
func       <- cap{word, "function"} '('
class      <- cap{'class', "keyword"} space+ cap{word, "type.class"}

token <- ws
       / class
       / keyword
       / bool
       / type
       / func
       / identifier
       / string
       / comment
       / number
       / annotation
       / operator
